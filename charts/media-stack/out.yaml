---
# Source: media-stack/templates/manifest.yaml
apiVersion: v1
kind: Service
metadata:
  name: media-stack-jellyfin-service
  namespace: media
spec:
  selector:
    app: jellyfin
  ports:
    - protocol: TCP
      targetPort: 8096
      port: 80
  type: ClusterIP
---
# Source: media-stack/templates/manifest.yaml
apiVersion: v1
kind: Service
metadata:
  name: media-stack-transmission-service
  namespace: media
spec:
  selector:
    app: transmission
  ports:
    - protocol: TCP
      targetPort: 9091
      port: 80
  type: ClusterIP
---
# Source: media-stack/templates/manifest.yaml
apiVersion: v1
kind: Service
metadata:
  name: media-stack-radarr-service
  namespace: media
spec:
  selector:
    app: radarr
  ports:
    - protocol: TCP
      targetPort: 7878
      port: 80
  type: ClusterIP
---
# Source: media-stack/templates/manifest.yaml
apiVersion: v1
kind: Service
metadata:
  name: media-stack-prowlarr-service
  namespace: media
spec:
  selector:
    app: prowlarr
  ports:
    - protocol: TCP
      targetPort: 9696
      port: 80
  type: ClusterIP
---
# Source: media-stack/templates/manifest.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-stack-jellyfin-deployment
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        image: "lscr.io/linuxserver/jackett:latest"
        ports:
          - name: webui-http
            containerPort: 8096
        env:
          - name: "PUID"
            value: "1000"
          - name: "PGID"
            value: "1000"
          - name: "TZ"
            value: "Australia/Melbourne"
        resources:
          requests:
            memory: "128Mi"
            cpu: "500m"
          limits:
            memory: "256Mi"
            cpu: "1000m"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: tv
          mountPath: /tv
        - name: movies
          mountPath: /movies
      volumes:
      - name: config
        hostPath:
          path: /mnt/disk/config/jellyfin
          type: Directory
      - name: tv
        hostPath:
          path: /mnt/disk/tv
          type: Directory
      - name: movies
        hostPath:
          path: /mnt/disk/movies
          type: Directory
---
# Source: media-stack/templates/manifest.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-stack-transmission-deployment
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transmission
  template:
    metadata:
      labels:
        app: transmission
    spec:
      containers:
      - name: transmission
        image: "lscr.io/linuxserver/transmission:latest"
        ports:
          - name: webui-http
            containerPort: 9091
          - name: torrent
            containerPort: 51413
        env:
          - name: "PUID"
            value: "1000"
          - name: "PGID"
            value: "1000"
          - name: "TZ"
            value: "Australia/Melbourne"
        resources:
          requests:
            memory: "128Mi"
            cpu: "500m"
          limits:
            memory: "256Mi"
            cpu: "1000m"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: downloads
          mountPath: /downloads
        - name: watch
          mountPath: /watch
      volumes:
      - name: config
        hostPath:
          path: /mnt/disk/config/transmission
          type: Directory
      - name: downloads
        hostPath:
          path: /mnt/disk/downloads
          type: Directory
      - name: watch
        hostPath:
          path: /mnt/disk/watch
          type: Directory
---
# Source: media-stack/templates/manifest.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-stack-radarr-deployment
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
      - name: radarr
        image: "lscr.io/linuxserver/radarr:latest"
        ports:
          - name: webui-http
            containerPort: 7878
        env:
          - name: "PUID"
            value: "1000"
          - name: "PGID"
            value: "1000"
          - name: "TZ"
            value: "Australia/Melbourne"
        resources:
          requests:
            memory: "128Mi"
            cpu: "500m"
          limits:
            memory: "256Mi"
            cpu: "1000m"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: downloads
          mountPath: /downloads
        - name: movies
          mountPath: /movies
      volumes:
      - name: config
        hostPath:
          path: /mnt/disk/config/radarr
          type: Directory
      - name: downloads
        hostPath:
          path: /mnt/disk/downloads
          type: Directory
      - name: movies
        hostPath:
          path: /mnt/disk/movies
          type: Directory
---
# Source: media-stack/templates/manifest.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-stack-prowlarr-deployment
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      containers:
      - name: prowlarr
        image: "lscr.io/linuxserver/prowlarr:latest"
        ports:
          - name: webui-http
            containerPort: 9696
        env:
          - name: "PUID"
            value: "1000"
          - name: "PGID"
            value: "1000"
          - name: "TZ"
            value: "Australia/Melbourne"
        resources:
          requests:
            memory: "128Mi"
            cpu: "500m"
          limits:
            memory: "256Mi"
            cpu: "1000m"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: downloads
          mountPath: /downloads
      volumes:
      - name: config
        hostPath:
          path: /mnt/disk/config/prowlarr
          type: Directory
      - name: downloads
        hostPath:
          path: /mnt/disk/downloads
          type: Directory
---
# Source: media-stack/templates/manifest.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: media-stack-jellyfin-ingress
  namespace: media
  annotations:
    kubernetes.io/ingress.class: "kong"
    konghq.com/protocols: https,http
spec:
  rules:
    - host: jellyfin.home.arpa
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: media-stack-jellyfin-service
                port:
                  number: 80
    - host: jellyfin.bbtea.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: media-stack-jellyfin-service
                port:
                  number: 80
---
# Source: media-stack/templates/manifest.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: media-stack-transmission-ingress
  namespace: media
  annotations:
    kubernetes.io/ingress.class: "kong"
    konghq.com/protocols: https,http
spec:
  rules:
    - host: transmission.home.arpa
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: media-stack-transmission-service
                port:
                  number: 80
    - host: transmission.bbtea.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: media-stack-transmission-service
                port:
                  number: 80
---
# Source: media-stack/templates/manifest.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: media-stack-radarr-ingress
  namespace: media
  annotations:
    kubernetes.io/ingress.class: "kong"
    konghq.com/protocols: https,http
spec:
  rules:
    - host: radarr.home.arpa
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: media-stack-radarr-service
                port:
                  number: 80
    - host: radarr.bbtea.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: media-stack-radarr-service
                port:
                  number: 80
---
# Source: media-stack/templates/manifest.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: media-stack-prowlarr-ingress
  namespace: media
  annotations:
    kubernetes.io/ingress.class: "kong"
    konghq.com/protocols: https,http
spec:
  rules:
    - host: prowlarr.home.arpa
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: media-stack-prowlarr-service
                port:
                  number: 80
    - host: prowlarr.bbtea.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: media-stack-prowlarr-service
                port:
                  number: 80
